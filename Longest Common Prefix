Write a function to find the longest common prefix string amongst an array of strings.

If there is no common prefix, return an empty string "".

 

Example 1:

Input: strs = ["flower","flow","flight"]
Output: "fl"
Example 2:

Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 

Constraints:

1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.


class Solution {
    public String longestCommonPrefix(String[] strs) {
        int n = strs.length;

        if(n == 0){
            return "";
        }

        if(n == 1){
            return strs[0];
        }

        Arrays.sort(strs);

        int i = 0;

        while(i < strs[0].length() && i < strs[n-1].length()){
            if(strs[0].charAt(i) == strs[n-1].charAt(i)){
                i++;
            }else{
                break;
            }
        }

        return (i == 0) ? "" : strs[0].substring(0,i);
    }
}
