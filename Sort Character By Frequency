Given a string s, sort it in decreasing order based on the frequency of the characters. The frequency of a character is the number of times it appears in the string.

Return the sorted string. If there are multiple answers, return any of them.

 

Example 1:

Input: s = "tree"
Output: "eert"
Explanation: 'e' appears twice while 'r' and 't' both appear once.
So 'e' must appear before both 'r' and 't'. Therefore "eetr" is also a valid answer.
Example 2:

Input: s = "cccaaa"
Output: "aaaccc"
Explanation: Both 'c' and 'a' appear three times, so both "cccaaa" and "aaaccc" are valid answers.
Note that "cacaca" is incorrect, as the same characters must be together.
Example 3:

Input: s = "Aabb"
Output: "bbAa"
Explanation: "bbaA" is also a valid answer, but "Aabb" is incorrect.
Note that 'A' and 'a' are treated as two different characters.
 

Constraints:

1 <= s.length <= 5 * 105
s consists of uppercase and lowercase English letters and digits.


class Solution {
    public class Info implements Comparable<Info>{
        int freq; 
        char ch;

        public Info(int f, char c){
            freq = f;
            ch = c;
        }

        @Override
        public int compareTo(Info i){
            return -this.freq + i.freq;
        }

    }
    public String frequencySort(String s) {
        int n = s.length();
        int[] freq = new int[256];
        PriorityQueue<Info> pq = new PriorityQueue<>();

        for(int i=0; i<n; i++){
            char c = s.charAt(i);
            if(Character.isLetter(c)){
                freq[c]++;
            }else if(Character.isDigit(c)){ 
                freq[c]++;
            }
        }

        for(int i=0; i<256; i++){
            if(freq[i] != 0){
               pq.add(new Info(freq[i],(char)i));
            }
        }
        
        StringBuilder ans = new StringBuilder("");

        while(!pq.isEmpty()){
            Info curr = pq.remove();
            for(int i=0; i<curr.freq; i++){
                ans.append(curr.ch);
            }
        }
    return ans.toString();
    }
}

